zswap:

    A lightweight compressed cache for swap pages. It takes pages that are
    in the process of being swapped out and attempts to compress them into
    a dynamically allocated RAM-based memory pool. zswap basically trades
    CPU cycles for potentially reduced swap I/O. This trade-off can also result
    in a significant performance improvement if reads from the compressed
    cache are faster than reads from a swap device.

Usage: 

    Cache swap pages destined for regular swap devices (or swap files).

Benefits:

    Integration with swap code (using Frontswap API) allows zswap to choose
    to store only pages that compress well and handle memory allocation failures,
    in those cases pages are sent to the backing swap device.

    Oldest pages in the cache are pushed out to backing swap device to make 
    room for newer pages, this solves the LRU inversion problem that a lack of
    page eviction would present.

Drawbacks:

    Needs a physical swap device (or swapfile).